---
- name: Get ansible_user home directory
  ansible.builtin.shell: 'set -o pipefail && getent passwd "{{ ansible_user }}" | cut -d: -f6'
  register: ansible_home_result
  changed_when: false
  tags:
    - config-base
    - config-dotfile

- name: Set the fact for the other scripts to use
  ansible.builtin.set_fact:
    ansible_home: "{{ ansible_home_result.stdout }}"
  changed_when: false
  tags:
    - config-base
    - config-dotfile

- name: Place Default Config
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.template:
    src: files/{{ item }}
    dest: "{{ ansible_home }}/.{{ item }}"
    mode: 0755
    backup: true
  with_items:
    - bash_profile
    - bashrc
  tags:
    - config-base
    - config-dotfile

- name: Fetch git-prompt.sh
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh
    dest: "{{ ansible_home }}/.git-prompt.sh"
    mode: 0664
  tags:
    - config-base
    - config-dotfile

- name: Fetch aws-ps1
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.git: # noqa: latest
    repo: https://github.com/eddiecorrigall/awscli-ext
    dest: "{{ ansible_home }}/awscli-ext"
  tags:
    - config-base
    - config-dotfile

- name: Fetch kube-ps1
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.git: # noqa: latest
    repo: https://github.com/jonmosco/kube-ps1
    dest: "{{ ansible_home }}/kube-ps1"
  tags:
    - config-base
    - config-dotfile

- name: Fetch z.sh
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.git: # noqa: latest
    repo: https://github.com/rupa/z
    dest: "{{ ansible_home }}/z"
  tags:
    - config-base
    - config-dotfile

- name: Create target directory for bash fragments
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.file:
    path: "{{ ansible_home }}/.bash.d"
    state: directory
    mode: 0755
  tags:
    - config-base
    - config-dotfile

- name: Place Files
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.template:
    src: "files/bash.d/{{ item }}"
    dest: "{{ ansible_home }}/.bash.d/{{ item }}"
    mode: 0755
  with_items: "{{ shell_scripts }}"
  tags:
    - config-base
    - config-dotfile

- name: Place .vimrc for vim
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.template:
    src: files/vimrc
    dest: "{{ ansible_home }}/.vimrc"
    mode: 0755
    backup: true
  tags:
    - config-base
    - config-dotfile

- name: Create target directory for nvim
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.file:
    path: "{{ ansible_home }}/.config/nvim"
    state: directory
    mode: 0755
  tags:
    - config-base
    - config-dotfile

- name: Place .vimrc for nvim
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.template:
    src: files/vimrc
    dest: "{{ ansible_home }}/.config/nvim/init.vim"
    mode: 0755
    backup: true
  tags:
    - config-base
    - config-dotfile

- name: Create target directory for translate-shell
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.file:
    path: "{{ ansible_home }}/.translate-shell"
    state: directory
    mode: 0755
  tags:
    - config-base
    - config-dotfile

- name: Place .init.trans
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.template:
    src: files/init.trans
    dest: "{{ ansible_home }}/.translate-shell/init.trans"
    mode: 0755
    backup: true
  tags:
    - config-base
    - config-dotfile

- name: Place .ctags
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.template:
    src: files/ctags
    dest: "{{ ansible_home }}/.ctags"
    mode: 0755
    backup: true
  tags:
    - config-base
    - config-dotfile

- name: Place .tmux.conf
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.template:
    src: files/tmux.conf
    dest: "{{ ansible_home }}/.tmux.conf"
    mode: 0755
    backup: true
  tags:
    - config-base
    - config-dotfile

- name: Fetch tpm
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.git: # noqa: latest
    repo: https://github.com/tmux-plugins/tpm
    dest: "{{ ansible_home }}/.tmux/plugins/tpm"
  tags:
    - config-base
    - config-dotfile

- name: Create target directory for alacritty
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.file:
    path: "{{ ansible_home }}/.config/alacritty"
    state: directory
    mode: 0755
  tags:
    - config-base
    - config-dotfile
    - skip_ansible_lint

- name: Place alacritty.yml
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.template:
    src: files/alacritty.yml
    dest: "{{ ansible_home }}/.config/alacritty/alacritty.yml"
    mode: 0755
    backup: true
  tags:
    - config-base
    - config-dotfile

- name: Place my.cnf
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.template:
    src: files/my.cnf
    dest: "{{ ansible_home }}/.my.cnf"
    mode: 0755
    backup: true
  tags:
    - config-base
    - config-dotfile

- name: Place .gitconfig
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.template:
    src: files/gitconfig
    dest: "{{ ansible_home }}/.gitconfig"
    mode: 0755
    backup: true
  tags:
    - config-base
    - config-dotfile

- name: Place .gitignore_global
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.template:
    src: files/gitignore_global
    dest: "{{ ansible_home }}/.gitignore_global"
    mode: 0755
    backup: true
  tags:
    - config-base
    - config-dotfile

- name: Place .globalrc
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.template:
    src: files/globalrc
    dest: "{{ ansible_home }}/.globalrc"
    mode: 0755
    backup: true
  tags:
    - config-base
    - config-dotfile

- name: Place .tigrc
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.template:
    src: files/tigrc
    dest: "{{ ansible_home }}/.tigrc"
    mode: 0755
    backup: true
  tags:
    - config-base
    - config-dotfile
