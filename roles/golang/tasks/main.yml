---
- name: Get ansible_user home directory
  ansible.builtin.shell: 'set -o pipefail && getent passwd "{{ ansible_user }}" | cut -d: -f6'
  register: ansible_home_result
  changed_when: false
  tags:
    - config-language
    - config-go

- name: Set the fact for the other scripts to use
  ansible.builtin.set_fact: ansible_home={{ ansible_home_result.stdout }}
  changed_when: false
  tags:
    - config-language
    - config-go

- name: Place go-bin.sh
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.template:
    src: files/go-bin.sh
    dest: "{{ ansible_home }}/.bash.d/go-bin.sh"
    mode: 0755
  tags:
    - config-language
    - config-go

- name: Check installed golang version
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.shell: bash -lc "goenv versions"
  register: goenv_installed
  changed_when: false
  failed_when: false
  tags:
    - config-language
    - config-go

- name: Install golang from goenv
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.shell: bash -lc "goenv install {{ item }}"
  with_items: "{{ go_versions }}"
  environment:
    GOENV_DISABLE_GOPATH: "1"
  when: 'item not in goenv_installed.stdout'
  tags:
    - config-language
    - config-go

- name: Set Global version
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.shell: bash -lc "goenv global {{ global_go_version }}"
  environment:
    GOENV_DISABLE_GOPATH: "1"
  tags:
    - config-language
    - config-go

- name: Install golang libraries
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.command: bash -lc "go install {{ item }}"
  with_items: "{{ go_binaries }}"
  environment:
    GOPATH: "{{ ansible_home }}/go"
    GOENV_DISABLE_GOPATH: "1"
  tags:
    - config-language
    - config-go
