- name: Install kubectl
  shell: brew install kubernetes-cli
  when: "ansible_os_family == 'Darwin'"
  args:
    executable: /bin/bash

- name: Install kubectl
  become: yes
  shell: |
    curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
    mv ./kubectl /usr/local/bin/kubectl
    chmod +x /usr/local/bin/kubectl
  when: ("ansible_os_family == 'Debian'")
  args:
    executable: /bin/bash

- name: Install helm
  shell: https://raw.githubusercontent.com/helm/helm/master/scripts/get | bash
  args:
    executable: /bin/bash

- name: Install Helmfile
  become: yes
  shell: |
    SYSNAME="$(uname -s | tr '[A-Z]' '[a-z]')_amd64"
    curl -s https://api.github.com/repos/roboll/helmfile/releases/latest | jq -r --arg SYSNAME "$SYSNAME" '.assets[] | select(.name | contains($SYSNAME)) | .browser_download_url' | wget -i -
    mv "helmfile_$SYSNAME" /usr/local/bin
    chmod +x /usr/local/bin
  args:
    executable: /bin/bash

- name: Install Helm Plugin
  shell: |
    helm plugin install https://github.com/rimusz/helm-tiller
    helm plugin install https://github.com/databus23/helm-diff --version master
    helm plugin install https://github.com/futuresimple/helm-secrets
  args:
    executable: /bin/bash

- name: Install stern
  become: yes
  shell: |
    SYSNAME="$(uname -s | tr '[A-Z]' '[a-z]')_amd64"
    curl -s https://api.github.com/repos/wercker/stern/releases/latest | jq -r --arg SYSNAME "$SYSNAME" '.assets[] | select(.name | contains($SYSNAME)) | .browser_download_url' | wget -i -
    mv "stern_$SYSNAME" /usr/local/bin
    chmod +x /usr/local/bin
  args:
    executable: /bin/bash

- name: Install kube-ps1
  shell: brew install kube-ps1
  when: "ansible_os_family == 'Darwin'"
  args:
    executable: /bin/bash

- name: Install awscli
  shell: pip3 install awscli --upgrade --user
  args:
    executable: /bin/bash

- name: Install yq
  shell: pip3 install yq
  args:
    executable: /bin/bash

- name: Install onelogin-aws-cli
  shell: pip3 install onelogin-aws-cli
  args:
    executable: /bin/bash

- name: Install eksctl
  become: yes
  shell: |
    curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
    mv /tmp/eksctl /usr/local/bin
    chmod +x /usr/local/bin
  args:
    executable: /bin/bash

- name: Install aws-iam-authenticator
  shell: go get -u github.com/kubernetes-sigs/aws-iam-authenticator/cmd/aws-iam-authenticator
  args:
    executable: /bin/bash

- name: Install terraform
  shell: brew install terraform
  when: "ansible_os_family == 'Darwin'"
  args:
    executable: /bin/bash

- name: Install terraform
  become: yes
  shell: |
    wget https://releases.hashicorp.com/terraform/0.11.11/terraform_0.11.11_linux_amd64.zip
    unzip terraform_0.11.11_linux_amd64.zip
    mv ./terraform /usr/bin/
  when: ("ansible_os_family == 'Debian'")
  args:
    executable: /bin/bash

- name: Install sopsed
  become: yes
  shell: |
    curl -s https://api.github.com/repos/mumoshu/sopsed/releases/latest | jq -r ".assets[] | .browser_download_url" | wget -i -
    mv sopsed /usr/local/bin
    chmod +x /usr/local/bin
  args:
    executable: /bin/bash

- name: Install variant
  become: yes
  shell: |
    SYSNAME="$(uname -s | tr '[A-Z]' '[a-z]')_amd64"
    curl -s https://api.github.com/repos/mumoshu/variant/releases/latest | jq -r --arg SYSNAME "$SYSNAME" '.assets[] | select(.name | contains($SYSNAME)) | .browser_download_url' | wget -i -
    tar zxvf "variant_$VERSION_$SYSNAME.tar.gz"
    mv "variant" /usr/local/bin
    chmod +x /usr/local/bin
  args:
    executable: /bin/bash
