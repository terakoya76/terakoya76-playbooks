# share history with each tab
function share_history {
  history -a
  history -c
  history -r
}
HISTFILE=~/.bash_history
HISTIGNORE=ls:history
PROMPT_COMMAND='share_history'
HISTSIZE=50000

# wrapper for lsec2
lssh () {
  IP=$(lsec2 "$@" | peco | awk -F '\t' '{print $2}')
  if [ "$?" -eq 0 ] && [ "$IP" != "" ]
  then
    ssh st-step
    ssh "$IP"
  fi
}

# wrapper for history
export HISTCONTROL="ignoredups"
function peco-select-history() {
  READLINE_LINE=$(history | tail -r | sed -e 's/^\s*[0-9]\+\s\+//' | awk '!a[$0]++' | peco --query "$READLINE_LINE" | awk '{$1=""; print}')
  if [ -n "$READLINE_LINE" ] ; then
    echo "$READLINE_LINE" >&2
    eval "$READLINE_LINE"
    history -s "$READLINE_LINE"
  fi
}
alias psh="peco-select-history"

# wrapper for ps aux
function peco-pkill() {
  for pid in $(ps aux | peco | awk '{ print $2 }')
  do
    kill "$pid"
    echo "Killed ${pid}"
  done
}
alias pk="peco-pkill"

# k8s
alias k="bin/kubectl"

# git
function fetch-pull-request() {
  # $1=remote_branch, $2=pr_number
  git fetch "$1" pull/"$2"/head:"$2"
}
function setup-remote-repository() {
  # $1=path, $2=forked, $3=owner, $4=repo
  mkdir -p "$1"
  git clone "git@github.com:$2/$4.git" "$1/$4"
  cd "$1/$4" || exit 1
  git remote add upstream "git@github.com:$3/$4.git"
  git remote set-url upstream --push no-pushing
}
alias ga="git add"
alias gs="git status"
alias gb="git branch"
alias gc="git commit"
alias gco="git checkout"
alias gd="git diff"
alias gl="git log"
alias gpr="fetch-pull-request"
alias gsu="setup-remote-repository"

# rails
alias be="bundle ex"
alias bes="bundle ex rails s -b 0.0.0.0 -p $1"

# exa(ls)
alias ls="exa -Tl"

# fdfind(fd)
alias fd=fdfind

# cat(bat)
docker pull danlynn/bat
export BAT_THEME="TwoDark"
alias cat='docker run -it --rm -e BAT_THEME -e BAT_STYLE -e BAT_TABS -v "$(pwd):/myapp" danlynn/bat'

# direnv
eval "$(direnv hook bash)"
