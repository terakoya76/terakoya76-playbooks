---
- name: Get ansible_user home directory
  ansible.builtin.shell: 'set -o pipefail && getent passwd "{{ ansible_user }}" | cut -d: -f6'
  register: ansible_home_result
  changed_when: false
  tags:
    - config-language
    - config-nodejs

- name: Set the fact for the other scripts to use
  ansible.builtin.set_fact:
    ansible_home: "{{ ansible_home_result.stdout }}"
  changed_when: false
  tags:
    - config-language
    - config-nodejs

- name: Place yarn.sh
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.template:
    src: files/yarn.sh
    dest: "{{ ansible_home }}/.bash.d/yarn.sh"
    mode: 0755
  tags:
    - config-language
    - config-nodejs

- name: Check installed nodejs version
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.command: bash -lc "nodenv versions"
  register: nodenv_installed
  changed_when: false
  failed_when: false
  tags:
    - config-language
    - config-nodejs

- name: Install node-build
  become: true
  ansible.builtin.command: bash -lc "{{ ansible_home }}/.anyenv/envs/nodenv/plugins/node-build/install.sh"
  with_items: "{{ node_versions }}"
  when: 'item not in nodenv_installed.stdout'
  tags:
    - config-language
    - config-nodejs

- name: Install nodejs from nodenv
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.command: bash -lc "nodenv install {{ item }}"
  with_items: "{{ node_versions }}"
  when: 'item not in nodenv_installed.stdout'
  tags:
    - config-language
    - config-nodejs

- name: Set Global version
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.command: bash -lc "nodenv global {{ global_node_version }}"
  tags:
    - config-language
    - config-nodejs

- name: Install commitizen
  become: true
  become_user: "{{ ansible_user }}"
  community.general.npm:
    name: commitizen
    state: present
    global: true
    executable: "{{ ansible_home }}/.anyenv/envs/nodenv/shims/npm"
  tags:
    - config-language
    - config-nodejs
